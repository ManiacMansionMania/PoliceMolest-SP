// Rutherfords Büro (Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Rutherfords Büro");
	Door[eDoorNumRutherford].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumRutherford].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hFenster_AnyClick()
{
	if (any_click_move(55, 137, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Fenster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nicht. Das Fenster ist fest in der Wand verankert.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Draußen sieht es kalt aus.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das Fenster ist doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nur in Zeichentrickfilmen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich müsste das Fenster öffnen um es aus dem Fenster zu werfen. Also nein.");
		}
		else Unhandled();
	}
}

function hComputer_AnyClick()
{
	if (any_click_move(85, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cRutherford.SayIfPlayer("Das ist mein Arbeitsplatz-Computer.") )
			{
				player.Say("Rutherfords Arbeits-Computer.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wüsste nicht für was.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der steht da doch gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit nicht.");
		}
		else Unhandled();
	}
}

function hSessel_AnyClick()
{
	if (any_click_move(85, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cRutherford.SayIfPlayer("Mein Sessel.") )
			{
				player.Say("Rutherfords Sessel. Mam munkelt, er riecht.");
				Wait(10);
				player.FaceDirection(eDirectionDown);
				Wait(10);
				player.Say("Der Sessel, nicht Rutherford.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den fasse ich nicht an.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich bin nicht müde.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich beschädige keine Sitzmöbel.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Wieso? Der steht da doch gut.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann liegt das auf dem Sessel. Aber was bringt mir das?");
		}
		else Unhandled();
	}
}

function hStifte_AnyClick()
{
	if (any_click_move(169, 126, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Stifte in einer Box.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keinen Stift.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich will mir nichts aufschreiben.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das funktioniert nicht mit einem Stift nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Sie klimpern in der Box.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht zu den Stiften.");
		}
		else Unhandled();
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(64, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Gesucht: Meteor.");
		}
		else
		{
			Wait(5);
			player.Say("Das ist ein wichtiges Fahndungsfoto. Also nein.");
		}
		//else Unhandled();
	}
}

function hAufgaben_AnyClick()
{
	if (any_click_move(137, 135, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cRutherford.SayIfPlayer("Meine täglichen Aufgaben.") )
			{
				player.Say("Detective Rutherfords Aufgaben.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da steht: Spuren sichern, ...");
			player.Say("also nur allgemeine Sachen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Später.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die stecken doch da gut im Kork.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das verschmutzt nur die Zettel.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(166, 119, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine Rotlicht-Lampe");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die hängt zu hoch.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Lichtverhältnisse erfordern das nicht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Glühbirne ist noch ganz. Sie erfordert keinen Eingriff meinserseits.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein, denn dann schwingt die Lampe.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ich lasse das lieber sein.");
		}
		else Unhandled();
	}
}

function hSchraenckchen_AnyClick()
{
	if (any_click_move(253, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein kleines Schränchcken.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Holzschränckchen ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der werden nur Akten drin sein.");
			Wait(10);
			player.Say("Vermutlich.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Schrank ist doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das würde hässliche Kratzspuren hinterlassen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht in den Schrank legen.");
		}
		else Unhandled();
	}
}

function hAktenschrank_AnyClick()
{
	if (any_click_move(259, 132, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Aktenschrank voller gelöster und ungelöster Fälle.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Spi... du?");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Jetzt nicht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Alle Fächer sind geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der lösst sich nicht verschieben.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein, das lege ich nicht in den Aktenschrank.");
		}
		else Unhandled();
	}
}

function hTapetenabriss_AnyClick()
{
	if (any_click_move(253, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine eingerissene Tapetenbahn.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der hängt zu hoch.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Und wie soll ich dass?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("So nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das funktioniert nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das werfe ich nicht an die Wand.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
