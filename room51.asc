// Tankstelle (innen) (Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Tankstelle (innen)");
	Door[eDoorNumTankstellentuer].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumTankstellentuer].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hBild_AnyClick()
{
	if (any_click_move(104, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Bild.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich will nicht wissen, was dahinter ist.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Darauf sieht man Stan.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Laverne würde sagen: \"Benutz' mal lieber dein Hirn.\"");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nicht damit.");
		}
		else Unhandled();
	}
}

function hKanister_AnyClick()
{
	if (any_click_move(104, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Benzinkanister.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die lasse ich lieber stehen. Sie scheinen aber voll zu sein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Zündhölzer sind schon was praktisches.");
			Wait(7);
			player.FaceDirection(eDirectionDown);
			Wait(7);
			player.Say("Nicht, dass ich jetzt welche brauchen würde ...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Damit die Benzindämpfe austreten?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind sauber verschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleiben da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist nicht das passende Zündholz.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(203, 140, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Fenster. Draussen ist es schön.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Tja. So einfach geht das nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Draussen ist es schön.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich laase sie doch lieber zu.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ein anderes mal.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("So nicht.");
		}
		else Unhandled();
	}
}

function hAktenschrank_AnyClick()
{
	if (any_click_move(291, 136, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cStan.SayIfPlayer("Meine Kunden sind darin aufgeführt.") )
			{
				player.Say("Ein Aktenschrank.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich brauche gerade keine Akte.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Fächer sind verschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Später.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich da nicht reinlegen.");
		}
		else Unhandled();
	}
}

function hTisch_AnyClick()
{
	if (any_click_move(196, 136, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Tisch.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Uninteressant.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht auf den Tisch legen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
