// Pathologie(Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Pathologie");
	Door[eDoorNumPathologie].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumPathologie].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oBahre01_AnyClick()
{

}

function oBahre02_AnyClick()
{

}


/****************************
*   Hotspot-Funktionen
****************************/
function hAktenschrank_AnyClick()
{
	if (any_click_move(124, 111, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dadrin sind die Neuzugänge dokumentiert.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der bleibt stehen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Für diesen Papierkram bin ich nicht zuständig.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Netter Einfall. Aber dahinter ist ein rießiger Farbfleck.");
			Wait(50);
			player.Say("Glaube ich.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht in den Schrank legen.");
		}
		else Unhandled();
	}
}

function hSpiel_AnyClick()
{
	if (any_click_move(124, 111, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("\"Doktor Bibber\"");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich will jetzt nicht spielen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dafür war ich immer schon zu zitterig.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Schachtel ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Schieb hin, schieb her.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das scheint mir weder das Spielbrett, noch eine passende Figur zu sein.");
			player.Say("Also will ich das nicht in die Schachtel legen.");
		}
		else Unhandled();
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(26, 133, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der \"Musculus abductor hallucis\" bildet also den medialen Rand des Fußes.");
			Wait(20);
			player.Say("Wie... interessant.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das interessiert mich nicht wirklich.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich wüsste nicht wie.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht mit dem Poster.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das  funktioniert so nicht.");
		}
		else Unhandled();
	}
}

function hSchraenkchen_AnyClick()
{
	if (any_click_move(194, 110, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dort wird das Besteck für die Obduktion aufbewahrt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich brauche kein Obduktionsbesteck.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bleibt da, wo es ist.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht in den Schrank.");
		}
		else Unhandled();
	}
}

function hGefrierfaecher_AnyClick()
{
	if (any_click_move(240, 124, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Auch wenn das jetzt ein wenig die Atmospäre nimmt...");
			Wait(10);
			player.FaceDirection(eDirDown);
			Wait(20);
			player.Say("Größtenteils kühlen wir da drinnen nur unsere Getränke..."); 
			player.Say("oder frieren Zeug für die Mikrowelle ein."); 
			Wait(10);
			player.FaceDirection(eDirRight);
			Wait(20);
			player.Say("Das erklärt übrigends auch die große Menge an Kühlfächern.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die sind fest gemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich habe weder Interesse eine Leiche zu untersuchen,...");
			player.Say("noch ein gekühltes Bier zu trinken.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht da rein legen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
