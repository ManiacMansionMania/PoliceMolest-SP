// Millers Büro (Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
  aMusic59.Play();
	String seperator = String.Format("\\ **** Millers Büro");
	Door[eDoorNumMiller].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumMiller].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hSchublade_AnyClick()
{
	if (any_click_move(271, 141, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der Griff ist abgebrochen.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse) 
					|| UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich krieg sie nicht auf.");
			player.Say("Der Griff ist abgebrochen.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Schublade ist doch geschlossen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit bekomme ich die Schublade nicht auf.");
		}
		else Unhandled();
	}
}

function hKalender_AnyClick()
{
	if (any_click_move(100, 130, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);
			if ( !cDave.SayIfPlayer("Oh, ich hab' ja bald Geburtstag!") )
			{
				player.Say("Oh! Dave hat ja bald Geburtstag!");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Darin sind ziemlich viele wichtige Daten. Also bleibt er hängen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich werde ihn auf diesem Monat belassen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Damit man das Titelblatt sieht? Nein.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der kann da mal schön hängen bleiben.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Damit kann ich nichts im Kalender markieren.");
		}
		else Unhandled();
	}
}

function hKostuem_AnyClick()
{
	if (any_click_move(186, 139, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cDave.SayIfPlayer("Dads Hasenkostüm.") )
			{
				player.Say("Ich frage mich, was Mr. Miller damit vor hat?");
			}
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Meine jetzige Kleidung ist mir lieber.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das macht man mit dem Kostüm nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Vielleicht später.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann liegt das sinnlos auf dem Kostüm.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(266, 136, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein schöner Tag heute.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Soll ich es aus der Wand reissen?");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Auch wenn es hier stark nach abgestandener Erdbeersahne riecht, ...");
			player.Say("braucht nicht extra gelüftet zu werden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich wüsste nicht wie ...");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Das bringt's nicht.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das hinterlässt Fingerabdrücke.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht aus dem zweiten Stock werfen.");
		}
		else Unhandled();
	}
}

function hSchreiben_AnyClick()
{
	if (any_click_move(200, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Irgendein Antwortschreiben ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dieser Vorschlag wird mich sicher nirgendwo weiterbringen ...");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Du verstehst schon was von Adventures?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das könnte den Zettel zerreissen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das lasse ich lieber.");
		}
		else Unhandled();
	}
}

function hComputer_AnyClick()
{
	if (any_click_move(207, 122, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mister Millers Computer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( !cMiller.SayIfPlayer("Gerne ...") )
			{
				player.Say("Das ist nicht meiner.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich interessiere mich nicht für die Innereien.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch verschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Sonst noch was?");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt so nicht.");
		}
		else Unhandled();
	}
}

function hFlasche_AnyClick()
{
	if (any_click_move(71, 125, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein alter Weinballon voller Münzen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der Flaschenhals ist zu dünn für meinen Arm.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe gerade keine Münzen übrig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Wenn ich einen Laser oder einen Diamanten hätte, dann vielleicht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Dazu fehlt mir der Korken.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die lässt sich nicht verschieben. Die Haftreibung ist zu groß.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das ist keine Münze.");
		}
		else Unhandled();
	}
}

function hAktenschrank_AnyClick()
{
	if (any_click_move(46, 136, eDirectionLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wahrscheinlich voll mit Papierkram und leeren Dosen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist aber schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Da sind viele Akten drin.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich würde sicher an Langeweile sterben, wenn ich Akten durchwühlte.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Soweit ich sehe, sind alle Fächer geschlossen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann seh' ich das Teil nie wieder. Was einmal da drin ist. Kommt sicher nie wieder raus.");
		}
		else Unhandled();
	}
}

function hZettel01_AnyClick()
{
	if (any_click_move(185, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Also ich fange immer mit der unteren Linie an.");
			player.Say("Das klappt beinahe immer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe keinen Stift, mit dem ich das Haus zeichnen kann.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das beschädigt den Zettel.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nicht mit diesem Teil.");
		}
		else Unhandled();
	}
}

function hZettel02_AnyClick()
{
	if (any_click_move(238, 121, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sowas hängt sicher nicht in allen Büros.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe keinen Stift.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das beschädigt den Zettel.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nicht mit diesem Teil.");
		}
		else Unhandled();
	}
}

function hLampe_AnyClick()
{
	if (any_click_move(175, 137, eDirectionUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich glaube, die Edisons haben auch so eine.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann fehlt hier das Licht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Die Lichtverhältnisse hier stimmen.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht mit der Lampe.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Ein klares nein.");
		}
		else Unhandled();
	}
}

function hUeberreste_AnyClick()
{
	if (any_click_move(71, 138, eDirectionDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dem Geruch nach eine kalt gewordene Pizza Sweetheart ...");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Ding ist schon warm ein Anschlag auf die Geschmacksknospen ...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Schachtel ist bereits offen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Schachtel fasse ich nicht an.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Unter keinen Umständen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann kommt der Belag noch damit in Berührung.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
