// erster Keller (Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** erster Keller");
	Door[eDoorNumDuschen].Init(oDuschentuer, hTuer);
	oGittertuer.Clickable = false;
	oFahrstuhltuer.Clickable = false;

	if ( player.PreviousRoom == 15 ) // Spieler kommt aus dem Fahrstuhl
	{
		player.x	= -40;
		player.y	= 133;
	}
}

function room_AfterFadeIn()
{
	if ( player.PreviousRoom == 15 ) // Spieler kommt aus dem Fahrstuhl
	{
		StartCutscene(eSkipESCOrRightButton);
			PlaySound(90);
			oFahrstuhltuer.SetView(56, 0);
			oFahrstuhltuer.Animate(0, 2, eOnce, eBlock, eForwards);
			Wait(50);

			player.Walk(60, 133, eBlock, eAnywhere);
			Wait(50);
			oFahrstuhltuer.Animate(2, 2, eOnce, eBlock, eForwards);
			Wait(40);
		EndCutscene();
		
		gMaingui.Visible	= true;
		gAction.Visible		= true;
		Mouse.Visible			= true;
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumDuschen].Click() == 0 ) Unhandled();
}

bool TuerOeffnen()
{
	player.Walk(262, 124, eBlock, eWalkableAreas);
	player.FaceDirection(eDirUp);

	Wait(30);
  PlaySound(46);
  Wait(40);

	PlaySound(43); 
  oGittertuer.Visible = false;
	player.Walk(252, 115, eBlock, eAnywhere);

  Wait(20);
  player.FaceDirection(eDirDown);
  Wait(30);

	PlaySound(43); 
  oGittertuer.Visible = true;
  Wait(30);

  PlaySound(46);
  player.EnterRoom(20, 268, 125, eDirUp);
}

function hGittertuer_AnyClick()
{
	if (any_click_move(262, 100, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dadurch gelangt man in den Gefängnistrakt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die Tür ist fest.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			if ( player.ActiveInventory == iGefaengnissch )
			{
				TuerOeffnen();
			}
			else
			{
				player.Say("Ich hab' den passenden Schlüssel nicht.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nur, wenn die offen ist.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das Gitter ist sehr stabil.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			if ( player.ActiveInventory == iGefaengnissch )
			{
				TuerOeffnen();
			}
/*
			else if ( player.ActiveInventory == iDing && player == cMichael )
			{
				player.Say("Ding kann alleine durch die offenen Gitterstäbe da unten. Ich muss es ihm nur sagen.");
			}
*/
			else
			{
				player.Say("Warum sollte ich das durch das Gitter schieben.");
			}
		}
		else Unhandled();
	}
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hKnopf_AnyClick()
{
	if ( UsedAction(eActWalkTo) )
	{
		if ( any_click_move(60, 123, eDirUp) )
		{
		}
	}
	else if ( UsedAction(eActPush) || UsedAction(eActUse) )
	{
		if ( any_click_move(60, 123, eDirUp) )
		{
			Wait(20);
			gMaingui.Visible = false;
			gAction.Visible = false;
			StartCutscene(eSkipESCOrRightButton);
				PlaySound(83);
				Wait(20);
				PlayAmbientSound(1,170,100,0,0);

				while ( gi_Stockwerk < -1 )
				{
					gi_Stockwerk++;
					Wait(40);
				}

				StopAmbientSound(1);
				PlaySound(90);
				oFahrstuhltuer.SetView(56, 0, 0);
				oFahrstuhltuer.Animate(0, 0, eOnce, eBlock, eForwards); // Fahrstuhltür auf
				Wait(20);
			
				player.Walk(43, 133, eBlock, eAnywhere);
				player.FaceDirection(eDirLeft);
				Wait(40);
				player.Walk(-40, 133, eBlock, eAnywhere);
				oFahrstuhltuer.Animate(0, 0, eOnce, eBlock, eBackwards); // Fahrstuhltür zu
				Wait(40);
			EndCutscene();
			player.ChangeRoom(15); // Spieler in den Fahrstuhl schicken
		}
	}
	else
	{
		player.FaceDirection(eDirLeft);
		Unhandled();
	} 
}

function hFahrstuhl_AnyClick()
{
	if (any_click_move(51, 135, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Damit bin ich vorhin gefahren.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Haha. Guter Witz.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dazu muss ich das Panel benutzen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bekomme ich so nicht auf.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klappt auch nicht.");
		}
		else Unhandled();
	}
}

function hPlan_AnyClick()
{
	if (any_click_move(155, 118, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dort steht wohin die Linien führen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Damit keiner mehr weiß, was da steht?");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte den Plan beschädigen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
