// Damentoilette(Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Damentoilette");
	Door[eDoorNumDamentoilette].Init(oTuer, hTuer);
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumDamentoilette].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hSpiegel_AnyClick()
{
	if (any_click_move(268, 128, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Sieht so ein Krimineller aus?");
			Wait (20);
			player.FaceDirection(eDirDown);
			player.Say("Nein!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich lasse ihn da hängen wo er ist.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("In diesem Spiegel sieht man nicht gerade vorteilhaft aus.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich werde hier nicht randalieren!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Den male ich nicht an.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Da hilft kein Ziehen und kein Zerren.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dadurch wird der Spiegel nicht schöner.");
		}
		else Unhandled();
	}
}

function hFenster_AnyClick()
{
	if (any_click_move(223, 134, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			PlayMusic(33);
			SeekMIDIPosition(2);
			player.Say("Das Fenster zum Hof.");
			Wait(20);
			player.FaceDirection(eDirDown);
			player.Say("Ist ja wie bei Hitchcock.");
			Wait(20);
			PlayMusic(21);
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das geht nun wirklich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich werde da nicht raus klettern!");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es steht schon halb offen.");
			player.Say("Sicher wegen der Lüftung!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Lieber nicht.");
			player.Say("Ich will hier nicht ersticken.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Dann müsste ich es draußen holen. Also nein.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_move(268, 128, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist nichts drin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich werde hier nicht randalieren!");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Meine Hände sind sauber.");
			//player.FaceDirection(eDirDown);
			//player.Say("Wie mein Gewissen!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich werde hier nicht randalieren!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das ist gut festgemacht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht ins Waschbecken reinlegen.");
		}
		else Unhandled();
	}
}

function hKlospuelung_AnyClick()
{
	if (any_click_move(257, 129, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Kette für die Klospülung.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich lasse sie besser da hängen.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich weiß, der Sound ist in jedem Starterpack...");
			player.FaceDirection(eDirDown);
			player.Say("...aber ich will nicht spülen!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich werde hier nicht randalieren!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dann wackelt die Kette.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hToilette_AnyClick()
{
	if (any_click_move(257, 129, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Kloschüssel.");
			player.FaceDirection(eDirDown);
			player.Say("Viel zu nah am Fenster, für meinen Geschmack!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich lasse sie besser da wo sie ist.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich muss jetzt nicht.");
			player.FaceDirection(eDirDown);
			player.Say("Obwohl die ganze Situation ziemlich beschissen ist!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nein! Da will ich nicht mal reinschauen!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Deckel ist doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die Kloschüsse bewegt sich nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht die Toilette herunterspülen.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
