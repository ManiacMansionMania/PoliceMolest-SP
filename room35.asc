// 2. Stock (Vor Millers Büro) (Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** zweiter Stock (Vor Millers Büro)");
	Door[eDoorNumMiller].Init(oTuerMiller, hTuerMiller);
	Door[eDoorNumRutherford].Init(oTuerRutherford, hTuerRutherford);
	
	oVentilator.Clickable = false;
	oVentilator.SetView(58);
	oVentilator.Animate(0, 5, eRepeat, eNoBlock);

	if ( player.PreviousRoom == 15 ) // Spieler kommt aus dem Fahrstuhl
	{
		player.x	= -40;
		player.y	= 133;
	}
}

function room_AfterFadeIn()
{
	if ( player.PreviousRoom == 15 ) // Spieler kommt aus dem Fahrstuhl
	{
		StartCutscene(eSkipESCOrRightButton);
			PlaySound(90);
			oFahrstuhltuer.SetView(56, 0);
			oFahrstuhltuer.Animate(0, 2, eOnce, eBlock, eForwards);
			Wait(50);

			player.Walk(60, 133, eBlock, eAnywhere);
			Wait(20);

			oFahrstuhltuer.Animate(2, 2, eOnce, eBlock, eForwards);
			Wait(40);
		EndCutscene();
		
		gMaingui.Visible	= true;
		gAction.Visible		= true;
		Mouse.Visible			= true;
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerMiller_AnyClick()
{
	if ( Door[eDoorNumMiller].Click() == 0 ) Unhandled();
}

function hTuerRutherford_AnyClick()
{
	if ( Door[eDoorNumRutherford].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/
function oVentilator_AnyClick()
{

}


/****************************
*   Hotspot-Funktionen
****************************/
function hKnopf_AnyClick()
{
	if ( UsedAction(eActWalkTo) )
	{
		if ( any_click_move(60, 123, eDirUp) )
		{
		}
	}
	else if ( UsedAction(eActPush) || UsedAction(eActUse) )
	{
		if ( any_click_move(60, 123, eDirUp) )
		{
			Wait(20);
			gMaingui.Visible = false;
			gAction.Visible = false;
			StartCutscene(eSkipESCOrRightButton);
				PlaySound(83);
				Wait(20);
				PlayAmbientSound(1, 170, 100, 0, 0);

				while ( gi_Stockwerk < 2 )
				{
					gi_Stockwerk++;
					Wait(40);
				}

				StopAmbientSound(1);
				PlaySound(90);
				oFahrstuhltuer.SetView(56, 0, 0);
				oFahrstuhltuer.Animate(0, 0, eOnce, eBlock, eForwards); // Fahrstuhltür auf
				Wait(20);
			
				player.Walk(43, 133, eBlock, eAnywhere);
				player.FaceDirection(eDirLeft);
				Wait(40);
				player.Walk(-40, 133, eBlock, eAnywhere);
				oFahrstuhltuer.Animate(0, 0, eOnce, eBlock, eBackwards); // Fahrstuhltür zu
				Wait(40);
			EndCutscene();
			player.ChangeRoom(15); // Spieler in den Fahrstuhl schicken
		}
	}
	else
	{
		player.FaceDirection(eDirLeft);
		Unhandled();
	}
}

function hDurchgang_AnyClick()
{
	any_click_move(319, 126, eDirRight, true);
}

function hVentilator_AnyClick()
{
	int l_Counter = 0;
	int l_Wait		= 10;

	if (any_click_move(100, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Er dreht sich...");
			while ( l_Counter < 3 )
			{
				Wait(l_Wait);
				player.FaceDirection(eDirRight);
				Wait(l_Wait);
				player.FaceDirection(eDirDown);
				Wait(l_Wait);
				player.FaceDirection(eDirLeft);
				Wait(l_Wait);
				player.FaceDirection(eDirUp);
				Wait(l_Wait);
				player.Say("und dreht sich...");
				if ( l_Counter == 0 ) l_Wait = 5;
				if ( l_Counter == 1 ) l_Wait = 3;
				if ( l_Counter == 2 ) l_Wait = 5;
				l_Counter++;
			}
			player.Say("und dreht sich.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der hängt zu hoch.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Er dreht sich bereits.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nicht, während er sich dreht.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nicht, während er sich dreht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das hilft nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht an den Ventilator hängen.");
		}
		else Unhandled();
	}
}

function hPanel_AnyClick()
{
	if (any_click_move(98, 135, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist ein Panel auf dem Tisch angebracht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dazu habe ich keinen Grund.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Dass soll jemand anderes machen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Und damit das Panel verdecken.");
		}
		else Unhandled();
	}
}

function hComputer_AnyClick()
{
	if (any_click_move(62, 135, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Damit arbeitet die abteilungszuständige Sekretärin.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Dafür bin ich nicht zuständig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Da gibt es nichts zu schließen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Warum sollte ich ihn erschießen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt da nicht rein.");
		}
		else Unhandled();
	}
}

function hFaxgeraet_AnyClick()
{
	if (any_click_move(285, 125, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hmmm...");
			Wait(15);
			player.Say("\"Hallo!!!! Wie geht's? Mir ist langweilig.\"");
			player.Say("\"Boah, alles voll öde in Washington -.-\"");
			player.Say("\"Oh, Mist! Da kommt meine Sekretärin. Muss Schluss machen!\"");
			player.Say("\"Grüß Roby S. Mueller Numb3rIII ;)\"");
			Wait(10);
			player.FaceDirection(eDirDown);
			Wait(10);
			player.Say("Wer verschickt denn so einen Müll?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das Papier aus dem Faxgerät brauche ich nicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe nichts zum Faxen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das will ich nicht zerlegen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist bereits geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit spiele ich besser nicht rum.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt nicht in das Faxgerät.");
		}
		else Unhandled();
	}
}

function hAblage_AnyClick()
{
	if (any_click_move(133, 135, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da liegen nur leere Blätter drin.");
			player.Say("Es gibt wohl nicht viel zu tun.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine leeren Blätter.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Unter den Blättern wird kaum etwas Interessantes sein.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das geht mich nichts an.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Akte liegt sauber verschlossen da.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das will ich nicht dazu legen.");
		}
		else Unhandled();
	}
}

function hAktenschrank_AnyClick()
{
	if (any_click_move(228, 126, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wenn ich den kleinen Schildchen hier mein Vertrauen schenke,...");
			player.Say("dann enthält dieser Schränk nur Aufzeichnungen über angeschafften Bürobedarf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Hier sind nur Aufzeichnungen über Bürobedarf zu finden.");
			player.Say("Steht zumindest so auf den Schildchen hier.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Fächer sind bereits sabuer verschlossen.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das gehört da nicht rein.");
		}
		else Unhandled();
	}
}

function hPakete_AnyClick()
{
	if (any_click_move(261, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die enthalten anscheinend Druckerpapier.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Da hebe ich mir nur einen Bruch...");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich habe genug zu tun,...");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die sind doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die will ich nicht sperren.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das gehört da nicht rein.");
		}
		else Unhandled();
	}
}

function hSitzbank_AnyClick()
{
	if (any_click_move(120, 118, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hier haben sicher schon viele Verbrecher auf ihr Schicksal gewartet.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Wie stellst du dir das vor? Die ist festgeschraubt.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich kann noch problemlos stehen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Da gibt es kein Geheimfach.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein, so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das passt farblich nicht zur Sitzbank.");
		}
		else Unhandled();
	}
}

function hFahrstuhltuer_AnyClick()
{
	if (any_click_move(100, 130, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Fahrstuhltür ist zu,...");
			player.Say("daher gibt es nicht viel zu sehen.");

		}
		else if (UsedAction(eActPickUp) || UsedAction(eActClose) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Äh, nein.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dazu muss ich das Panel benutzen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das klebt nicht an der Tür.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.EnterRoom(36, 85, 128, eDirRight); 
}
