// Eingangshalle(Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_AfterFadeIn()
{
	String seperator = String.Format("\\ **** Eingangshalle");
	oFahrstuhltuer.Clickable = false;
	
	if ( player.PreviousRoom == 15 ) // Spieler kommt aus dem Fahrstuhl
	{
		StartCutscene(eSkipESCOrRightButton);
			PlaySound(90);
			oFahrstuhltuer.SetView(56, 0);
			oFahrstuhltuer.Animate(0, 2, eOnce, eBlock, eForwards);
			Wait(50);

			player.Walk(60, 133, eBlock, eAnywhere);
			Wait(20);

			oFahrstuhltuer.Animate(2, 2, eOnce, eBlock, eForwards);
			Wait(40);
		EndCutscene();
		
		gMaingui.Visible	= true;
		gAction.Visible		= true;
		Mouse.Visible			= true;
	}
}

function room_Load()
{
	if ( player.PreviousRoom == 15 ) // Spieler kommt aus dem Fahrstuhl
	{
		player.x	= -40;
		player.y	= 133;
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/



/****************************
*   Objekt-Funktionen
****************************/
function oWand_AnyClick()
{

}

function oTelefon_AnyClick()
{
	if (any_click_move(168, 115, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Nicht gerade die aktuellste Telefonanlage.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich wüsste nicht, wen ich anrufen sollte.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich brauche keine Höhrermuschel.");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht doch nicht mit dem Telefon.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Keine Lust.");
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hDraussen_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		any_click_move(318, 134, eDirRight);
	}
	else
	{
		if (any_click_move(310, 134, eDirUp))
		{
			if (UsedAction(eActLookAt))
			{
				Wait(5);
				player.Say("Da geht es nach draußen.");
			}
			else if (UsedAction(eActPickUp))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActUse))
			{
				Wait(5);
				player.Say("Ich kann einfach raus gehen.");
			}
			else if (UsedAction(eActOpen))
			{
				Wait(5);
				player.Say("Die Tür ist schon offen.");
			}
			else if (UsedAction(eActClose))
			{
				Wait(5);
				player.Say("Tags über bleibt die Tür offen.");
			}
			else if (UsedAction(eActPull))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActPush))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActUseInventory))
			{
				Wait(5);
				player.Say("Das will ich nicht nach draußen werfen.");
			}
			else Unhandled();
		}
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(175, 119, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("\"Die Ronville Pinguins.\"");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ach, lass mal.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("So nicht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose)
					|| UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das bringt doch nichts.");
		}
		else Unhandled();
	}
}

function hFahrstuhl_AnyClick()
{
	if (any_click_move(51, 135, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der gute alte Simpkins hat ihn so stark poliert, ...");
			player.Say("dass man sich drin spiegeln kann.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist festgemacht.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Dazu muss ich das Panel benutzen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist doch zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Wow.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hPanel_AnyClick()
{
	if ( UsedAction(eActWalkTo) )
	{
		if ( any_click_move(60, 123, eDirUp) )
		{
		}
	}
	else if ( UsedAction(eActPush) || UsedAction(eActUse) )
	{
		if ( any_click_move(60, 123, eDirUp) )
		{
			Wait(20);
			gMaingui.Visible = false;
			gAction.Visible = false;
			StartCutscene(eSkipESCOrRightButton);
				PlaySound(83);
				Wait(20);
				PlayAmbientSound(1,170,100,0,0);

				while ( gi_Stockwerk < -1 )
				{
					gi_Stockwerk++;
					Wait(40);
				}

				StopAmbientSound(1);
				PlaySound(90);
				oFahrstuhltuer.SetView(56, 0, 0);
				oFahrstuhltuer.Animate(0, 0, eOnce, eBlock, eForwards); // Fahrstuhltür auf
				Wait(10);
			
				player.Walk(43, 133, eBlock, eAnywhere);
				player.FaceDirection(eDirLeft);
				Wait(20);
				player.Walk(-40, 133, eBlock, eAnywhere);
				oFahrstuhltuer.Animate(0, 0, eOnce, eBlock, eBackwards); // Fahrstuhltür zu
				Wait(40);
			EndCutscene();
			player.ChangeRoom(15); // Spieler in den Fahrstuhl schicken
		}
	}
	else
	{
		player.FaceDirection(eDirLeft);
		Unhandled();
	} 
}

function hSteckbrief_AnyClick()
{
	if (any_click_move(120, 115, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Wie oft habe ich dieses Plakat schon gesehen?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein, der bleibt da hängen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Gesucht: Meteor.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein, so nicht.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das könnte ihn beschädigen.");
		}
		else Unhandled();
	}
}

function hAktenschraenke_AnyClick()
{
	if (any_click_move(268, 115, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ganz normale Aktenschränke.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die sind mir zu schwer.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich wüsste nicht wonach ich suchen sollte...");
		}
		else if (UsedAction(eActClose) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die sind doch zu.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das kommt da nicht rein.");
		}
		else Unhandled();
	}
}

function hTuer_AnyClick()
{
	if (any_click_move(120, 115, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Tür ist offen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Haha, guter Gag.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose) || UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Ich glaube nicht, dass das Schließen der Tür förderlich wäre.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Sie ist bereits offen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das geht nun wirklich nicht.");
		}
		else Unhandled();
	}
}

function hBlumentopf_AnyClick()
{
	if (any_click_move(307, 121, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Haben die in dem Topf etwa was beerdigt?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Der ist voll mit Erde und daher viel zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein, das mache ich nicht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Simpkins würde mich umbringen...");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Das würde nur dreckig werden.");
		}
		else Unhandled();
	}
}

function hRAB_AnyClick()
{
	if (any_click_move(214, 121, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein R.A.B. Poster.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Nein, das mache ich nicht.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Simpkins würde mich umbringen...");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.EnterRoom(16, 168, 132, eDirDown);
}
