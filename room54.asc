// Eisdiele (Police Molest)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	String seperator = String.Format("\\ **** Vor dem Eisladen");
	Door[eDoorNumEisladen].Init(oTuer, hTuer);
	PlayMusic(26);
	
	if ( player.PreviousRoom == 56 )
	{
		// vom Strand
		player.FaceDirection(eDirectionUp);
	}
	else if ( player.PreviousRoom == 42 )
	{
		// von der Straße
		player.FaceDirection(eDirectionLeft);
	}
}

function room_AfterFadeIn()
{
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( Door[eDoorNumEisladen].Click() == 0 ) Unhandled();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hSchrift_AnyClick()
{
	if (any_click_move(128, 82, eDirectionRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("'Coltelli's Ice Creme'.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist an der Wand festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("'Coltelli's Ice Creme'.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Holzbuchstaben lassen sich nur ablösen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Kein Buchstabe hängt locker.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das könnte die Buchstaben beschädigen.");
		}
		else Unhandled();
	}
}

function hWeg_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		any_click_move(318, 135, eDirectionRight);
	}
	else
	{
		if (any_click_move(313, 135, eDirectionRight))
		{
			if (UsedAction(eActLookAt))
			{
				Wait(5);
				player.Say("Da geht es zur Eisdiele am Strand.");
			}
			else if (UsedAction(eActPickUp))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActUse))
			{
				Wait(5);
				player.Say("Ich kann einfach hin laufen.");
			}
			else if (UsedAction(eActOpen) || UsedAction(eActClose))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActPull) || UsedAction(eActPush))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActUseInventory))
			{
				Wait(5);
				player.Say("Das will ich nicht dort hin werfen.");
			}
			else Unhandled();
		}
	}
}

function hStrand_AnyClick()
{
	if (UsedAction(eActWalkTo))
	{
		any_click_move(138, 141, eDirectionDown);
	}
	else
	{
		if (any_click_move(138, 135, eDirectionDown))
		{
			if (UsedAction(eActLookAt))
			{
				Wait(5);
				player.Say("Da geht es zum Strand.");
			}
			else if (UsedAction(eActPickUp))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActUse))
			{
				Wait(5);
				player.Say("Ich kann einfach hin laufen.");
			}
			else if (UsedAction(eActOpen) || UsedAction(eActClose))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActPull) || UsedAction(eActPush))
			{
				Wait(5);
				player.Say("Das geht nicht.");
			}
			else if (UsedAction(eActUseInventory))
			{
				Wait(5);
				player.Say("Das will ich nicht dort hin werfen.");
			}
			else Unhandled();
		}
	}
}


/****************************
*   Regionen-Funktionen
****************************/
function region1_WalksOnto()
{
	player.ChangeRoom(42, 583, 62);
}

function region2_WalksOnto()
{
	player.ChangeRoom(56, 46, 103);
}
